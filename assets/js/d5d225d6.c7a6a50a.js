"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9193],{4331:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"home/chains/avail","title":"Avail","description":"Avail is not a traditional smart contract platform, but a specialized Data Availability (DA) Layer. Its primary purpose is to provide a cheap, secure, and decentralized place to post data. For Paima Engine, it can act as an alternative to an L1 for storing the input data for your rollup, potentially leading to much lower \\"gas\\" costs.","source":"@site/docs/home/200-chains/204-avail.md","sourceDirName":"home/200-chains","slug":"/home/chains/avail","permalink":"/paima-v-next-docs/home/chains/avail","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/200-chains/204-avail.md","tags":[],"version":"current","sidebarPosition":204,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cardano","permalink":"/paima-v-next-docs/home/chains/cardano"},"next":{"title":"Production Deployment","permalink":"/paima-v-next-docs/home/deployment/deploy-game"}}');var a=t(3261),o=t(6613);const r={},l="Avail",s={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Supported Primitives",id:"supported-primitives",level:2},{value:"Contract Development",id:"contract-development",level:2},{value:"Local Development Setup",id:"local-development-setup",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"avail",children:"Avail"})}),"\n",(0,a.jsxs)(n.p,{children:["Avail is not a traditional smart contract platform, but a specialized ",(0,a.jsx)(n.strong,{children:"Data Availability (DA) Layer"}),'. Its primary purpose is to provide a cheap, secure, and decentralized place to post data. For Paima Engine, it can act as an alternative to an L1 for storing the input data for your rollup, potentially leading to much lower "gas" costs.']}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:["Network Definition (",(0,a.jsx)(n.code,{children:"buildNetworks"}),")"]}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'.buildNetworks(builder =>\n  builder.addNetwork({\n    name: "avail",\n    type: ConfigNetworkType.AVAIL,\n    // ... avail specific configuration\n  })\n)\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:["Sync Protocol Definition (",(0,a.jsx)(n.code,{children:"buildSyncProtocols"}),")"]}),":\nThe ",(0,a.jsx)(n.code,{children:"AVAIL_PARALLEL"})," protocol connects to an Avail light client to fetch application-specific data blobs."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'.addParallel(\n  (networks) => networks.avail,\n  (network, deployments) => ({\n    name: "parallelAvail",\n    type: ConfigSyncProtocolType.AVAIL_PARALLEL,\n    // ... config for the avail light client\n  }),\n)\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"supported-primitives",children:"Supported Primitives"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"TODO: Clarify the specific primitives for Avail. The primary interaction is likely reading raw data blobs associated with a specific Paima application ID, rather than tracking structured events like with EVM."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"contract-development",children:"Contract Development"}),"\n",(0,a.jsx)(n.p,{children:"Avail is not designed for complex, general-purpose smart contracts. Its main function is data submission and verification."}),"\n",(0,a.jsx)(n.h2,{id:"local-development-setup",children:"Local Development Setup"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"launchAvail"})," function (",(0,a.jsx)(n.code,{children:"@paima/orchestrator/start-avail"}),") can be used to spin up a local Avail node and the necessary light client for local testing."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},6613:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(9593);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
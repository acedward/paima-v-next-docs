"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5797],{1786:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"home/chains/evm","title":"EVM-Compatible Chains","description":"EVM (Ethereum Virtual Machine) chains are common and widely supported smart contract platforms in the Web3 ecosystem. This includes Ethereum itself, as well as numerous Layer 2 solutions like Arbitrum, Optimism, and Polygon, and sidechains like Avalanche C-Chain.","source":"@site/docs/home/200-chains/201-evm.md","sourceDirName":"home/200-chains","slug":"/home/chains/evm","permalink":"/paima-v-next-docs/home/chains/evm","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/200-chains/201-evm.md","tags":[],"version":"current","sidebarPosition":201,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Supported Chains","permalink":"/paima-v-next-docs/home/chains/"},"next":{"title":"Midnight","permalink":"/paima-v-next-docs/home/chains/midnight"}}');var r=i(3261),s=i(6404);const o={},a="EVM-Compatible Chains",c={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Supported Primitives",id:"supported-primitives",level:2},{value:"Contract Development",id:"contract-development",level:2},{value:"Local Development Setup",id:"local-development-setup",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"evm-compatible-chains",children:"EVM-Compatible Chains"})}),"\n",(0,r.jsx)(n.p,{children:"EVM (Ethereum Virtual Machine) chains are common and widely supported smart contract platforms in the Web3 ecosystem. This includes Ethereum itself, as well as numerous Layer 2 solutions like Arbitrum, Optimism, and Polygon, and sidechains like Avalanche C-Chain."}),"\n",(0,r.jsxs)(n.p,{children:["For most dApps built with Paima Engine, an EVM chain will serve as a primary layer for asset management (NFTs, tokens) and user interactions via the ",(0,r.jsx)(n.code,{children:"PaimaL2Contract"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["You add an EVM network to your Paima application using the ",(0,r.jsx)(n.code,{children:"addViemNetwork"})," helper in your ",(0,r.jsx)(n.code,{children:"config.ts"}),", which leverages the chain definitions from the popular ",(0,r.jsx)(n.code,{children:"viem"})," library."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["Network Definition (",(0,r.jsx)(n.code,{children:"buildNetworks"}),")"]}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'.buildNetworks(builder =>\n  builder.addViemNetwork({\n    ...hardhat, // Or ...arbitrum, ...mainnet, etc.\n    name: "myEvmChain",\n  })\n)\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["Sync Protocol Definition (",(0,r.jsx)(n.code,{children:"buildSyncProtocols"}),")"]}),":\nThe protocol type for connecting to an EVM chain is ",(0,r.jsx)(n.code,{children:"EVM_RPC_PARALLEL"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'.addParallel(\n  (networks) => networks.myEvmChain,\n  (network, deployments) => ({\n    name: "myEvmRpcProtocol",\n    type: ConfigSyncProtocolType.EVM_RPC_PARALLEL,\n    chainUri: network.rpcUrls.default.http[0],\n    startBlockHeight: 1,\n    pollingInterval: 1000,\n    confirmationDepth: 2, // Wait for 2 blocks before considering an event final\n  }),\n)\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"supported-primitives",children:"Supported Primitives"}),"\n",(0,r.jsx)(n.p,{children:"Paima provides a rich set of primitives for automatically tracking common on-chain activities on EVM."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"EvmRpcPaimaL2"})}),": Listens for ",(0,r.jsx)(n.code,{children:"PaimaGameInteraction"})," events from the ",(0,r.jsx)(n.code,{children:"PaimaL2Contract"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"EvmRpcERC20"})}),": Tracks ",(0,r.jsx)(n.code,{children:"Transfer"})," events from an ERC20 contract and automatically maintains a table of token balances."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"EvmRpcERC721"})}),": Tracks ",(0,r.jsx)(n.code,{children:"Transfer"})," events from an ERC721 contract and automatically maintains a table of NFT owners."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"EvmRpcERC1155"})}),": Tracks ",(0,r.jsx)(n.code,{children:"TransferSingle"})," and ",(0,r.jsx)(n.code,{children:"TransferBatch"})," events from an ERC1155 contract."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"EvmRpcGeneric"})}),": A powerful generic primitive that can be configured to listen for ",(0,r.jsx)(n.em,{children:"any"})," event from ",(0,r.jsx)(n.em,{children:"any"})," contract, given its ABI."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"contract-development",children:"Contract Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Language"}),": Solidity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tools"}),": The Paima templates are pre-configured for development with ",(0,r.jsx)(n.strong,{children:"Hardhat"})," and ",(0,r.jsx)(n.strong,{children:"Foundry (Forge)"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compilation"}),": ",(0,r.jsx)(n.code,{children:"deno task build:evm"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"local-development-setup",children:"Local Development Setup"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"launchEvm"})," function provided by the Paima Orchestrator (",(0,r.jsx)(n.code,{children:"@paima/orchestrator/start-evm"}),") automates your local setup. When included in your ",(0,r.jsx)(n.code,{children:"orchestrator.ts"}),", it will:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Start a local Hardhat node."}),"\n",(0,r.jsx)(n.li,{children:"Wait for the node to be responsive."}),"\n",(0,r.jsx)(n.li,{children:"Run your deployment scripts to deploy all your EVM contracts."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6404:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(9593);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);
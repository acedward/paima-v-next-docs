"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[615],{1644:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"home/components/node-startup","title":"Node Startup","description":"Once configured your chains, defined your grammar, and written your state machine logic. The final step is to bring all these pieces together and hand them off to the Paima Engine to be executed.","source":"@site/docs/home/100-components/117-node-startup.md","sourceDirName":"home/100-components","slug":"/home/components/node-startup","permalink":"/paima-v-next-docs/home/components/node-startup","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/100-components/117-node-startup.md","tags":[],"version":"current","sidebarPosition":117,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Accounts","permalink":"/paima-v-next-docs/home/components/accounts"},"next":{"title":"Supported Chains","permalink":"/paima-v-next-docs/home/chains/"}}');var o=t(3261),s=t(6613);const a={},r="Node Startup",c={},l=[{value:"Paima Engine <code>start(...)</code>",id:"paima-engine-start",level:3},{value:"The <code>start()</code> Configuration Object",id:"the-start-configuration-object",level:3},{value:"The Big Picture: From Orchestrator to Running Node",id:"the-big-picture-from-orchestrator-to-running-node",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"node-startup",children:"Node Startup"})}),"\n",(0,o.jsxs)(n.p,{children:["Once configured your ",(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/sync-service",children:"chains"}),", defined your ",(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/grammar",children:"grammar"}),", and written your ",(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/state-machine",children:"state machine"})," logic. The final step is to bring all these pieces together and hand them off to the Paima Engine to be executed."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"We will be using the /templates/evm-midnight as example"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"start(...)"})," Is the main entry point, located at ",(0,o.jsx)(n.code,{children:"/packages/client/node/src/main.ts"})," in the template project. This file acts as the central launch system of your Paima Engine Node, importing all the different components of your application and passing them to the Paima Engine Runtime."]}),"\n",(0,o.jsxs)(n.h3,{id:"paima-engine-start",children:["Paima Engine ",(0,o.jsx)(n.code,{children:"start(...)"})]}),"\n",(0,o.jsxs)(n.p,{children:["The entry point file is concise but powerful. It uses the ",(0,o.jsx)(n.code,{children:"effection"})," library for structured concurrency to manage the node's lifecycle and the ",(0,o.jsx)(n.code,{children:"@paima/runtime"})," package to start the engine."]}),"\n",(0,o.jsxs)(n.p,{children:["Let's break down a typical ",(0,o.jsx)(n.code,{children:"main.ts"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { main, suspend } from "effection";\nimport { init, start } from "@paima/runtime";\nimport { toSyncProtocolWithNetwork, withPaimaStaticConfig } from "@paima/config";\n\n// 1. Import all the core pieces of your application\n// Project Defined Components\nimport { localhostConfig } from "@example/data-types/localhostConfig";\nimport { migrationTable } from "@example/database";\nimport { grammar } from "@example/data-types/grammar";\nimport { gameStateTransitions } from "./state-machine.ts";\nimport { apiRouter } from "./api.ts";\n\nconst appName = "evm-midnight-example";\nconst appVersion = "0.3.21";\n\n// 2. Define the main() execution block\nmain(function* () {\n  // Initialize the Paima runtime environment\n  yield* init();\n  console.log("Starting Paima Engine Node");\n\n  // 3. Load your static configuration into the runtime\'s context\n  yield* withPaimaStaticConfig(localhostConfig, function* () {\n\n    // 4. Start the Paima Engine with all your application\'s components\n    yield* start({\n      appName,\n      appVersion,\n      syncInfo: toSyncProtocolWithNetwork(localhostConfig),\n      gameStateTransitions,\n      migrations: migrationTable,\n      apiRouter,\n      grammar,\n    });\n  });\n\n  // Keep the process alive indefinitely\n  yield* suspend();\n});\n'})}),"\n",(0,o.jsxs)(n.h3,{id:"the-start-configuration-object",children:["The ",(0,o.jsx)(n.code,{children:"start()"})," Configuration Object"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"start()"})," function is the most important call. It accepts a single configuration object that tells the Paima Runtime exactly how to build and run your dApp."]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{style:{textAlign:"left"},children:"Property"}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:"Related Documentation"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,o.jsx)(n.code,{children:"appName"}),", ",(0,o.jsx)(n.code,{children:"appVersion"})]}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"Basic metadata for your application, used for logging and identification."}),(0,o.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"syncInfo"})})}),(0,o.jsxs)(n.td,{style:{textAlign:"left"},children:["The chain and primitive configuration you defined in your ",(0,o.jsx)(n.code,{children:"config.ts"})," file. This tells the Sync Service which chains to connect to and what events to monitor."]}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/sync-service",children:"Sync Service & Chain Config"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"gameStateTransitions"})})}),(0,o.jsxs)(n.td,{style:{textAlign:"left"},children:["The collection of your State Transition Functions (STFs) from your ",(0,o.jsx)(n.code,{children:"state-machine.ts"})," file. This is the core logic of your dApp."]}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/state-machine",children:"State Machine"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"migrations"})})}),(0,o.jsxs)(n.td,{style:{textAlign:"left"},children:["The database migration configuration from your ",(0,o.jsx)(n.code,{children:"migration-order.ts"})," file. This tells the engine how to set up and evolve your database schema."]}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/database",children:"Database"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"apiRouter"})})}),(0,o.jsxs)(n.td,{style:{textAlign:"left"},children:["The custom API router function from your ",(0,o.jsx)(n.code,{children:"api.ts"})," file. This is how you add your own custom endpoints to the node's API."]}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/api",children:"API"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"grammar"})})}),(0,o.jsxs)(n.td,{style:{textAlign:"left"},children:["The grammar definition from your ",(0,o.jsx)(n.code,{children:"grammar.ts"})," file. This is used to parse and validate all incoming on-chain data."]}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/grammar",children:"Grammar"})})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"the-big-picture-from-orchestrator-to-running-node",children:"The Big Picture: From Orchestrator to Running Node"}),"\n",(0,o.jsxs)(n.p,{children:["This ",(0,o.jsx)(n.code,{children:"main.ts"})," file is the final link in the chain of command for starting your dApp."]}),"\n",(0,o.jsx)(n.mermaid,{value:'---\nconfig:\n  flowchart:\n    subGraphTitleMargin:\n      top: 5\n      bottom: 25\n---\ngraph TD\n    subgraph "User"\n        A["fa:fa-keyboard $ deno task dev"]\n    end\n\n    subgraph "Phase 1: Orchestration"\n        B(Process Orchestrator)\n        subgraph "Launches & Monitors Dependencies"\n            \n            C[fa:fa-server Infrastructure:<br/>Database, Collector, ...]\n            D[fa:fa-database Dev Tools:<br/>TUI, Explorer, ...]\n            E[fa:fa-network-wired Chain Services:<br/>Nodes, Indexers, Proof Server, Deploy Contracts, ...]\n            F[Frontends]\n        end\n        G{fa:fa-hourglass-half Wait for Dependencies to be Ready...}\n    end\n\n    subgraph "Phase 2: Paima Node Execution"\n        H(Paima Engine Node)\n        subgraph "Node Initializes Internal Services"\n            I[fa:fa-sync Chain & Primitives Sync Service]\n            J[fa:fa-cogs State Machine & State]\n            K[fa:fa-plug API Server]\n            L[Other Subsystems]\n        end\n    end\n\n    A --\x3e B;\n    B --\x3e C;\n    B --\x3e D;\n    B --\x3e E;\n    B --\x3e F;\n\n    C --\x3e G;\n    D --\x3e G;\n    E --\x3e G;\n    F --\x3e G;\n    \n    G -- All services ready --\x3e H;\n    \n    H --\x3e L;\n    H --\x3e I;\n    H --\x3e J;\n    H --\x3e K;'}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.a,{href:"/paima-v-next-docs/home/components/processes",children:"Process Orchestrator"})," first sets up the entire external environment (local chains, etc.)."]}),"\n",(0,o.jsxs)(n.li,{children:["Its final step is to execute your node's ",(0,o.jsx)(n.code,{children:"start(...)"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Your ",(0,o.jsx)(n.code,{children:"main.ts"})," gathers all your application-specific configurations and logic."]}),"\n",(0,o.jsxs)(n.li,{children:['It passes this complete "blueprint" to the Paima Runtime\'s ',(0,o.jsx)(n.code,{children:"start()"})," function."]}),"\n",(0,o.jsx)(n.li,{children:"The Paima Runtime then uses this blueprint to initialize and run all of its internal services, creating a fully operational Paima Engine node tailored to your dApp."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},6613:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(9593);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);
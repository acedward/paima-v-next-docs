"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2242],{2304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"home/components/state-machine","title":"State Machine","description":"Overview","source":"@site/docs/home/100-components/102-state-machine.md","sourceDirName":"home/100-components","slug":"/home/components/state-machine","permalink":"/paima-v-next-docs/home/components/state-machine","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/100-components/102-state-machine.md","tags":[],"version":"current","sidebarPosition":102,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Sync Protocols & Chain Config","permalink":"/paima-v-next-docs/home/components/sync-service"},"next":{"title":"API","permalink":"/paima-v-next-docs/home/components/api"}}');var i=t(3261),r=t(6613);const a={},c="State Machine",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Example",id:"example",level:2},{value:"Determinism",id:"determinism",level:2},{value:"Adding a new STF",id:"adding-a-new-stf",level:2},{value:"STF Coroutines and the <code>World</code> Effect System",id:"stf-coroutines-and-the-world-effect-system",level:2},{value:"STF Function Definition",id:"stf-function-definition",level:3},{value:"The <code>World</code> Object: Performing Side Effects",id:"the-world-object-performing-side-effects",level:3},{value:"<code>World.resolve(query, input)</code>",id:"worldresolvequery-input",level:4},{value:"<code>World.promise(promise)</code>",id:"worldpromisepromise",level:4}];function l(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"state-machine",children:"State Machine"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"A State Machine (SM) is the core of your Paima Engine application, defining its logic and rules. Let's break down the concept:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"It has a State, which is the complete record of the Paima Engine Node at any given moment (e.g., user assets, statuses, etc.), stored in a database."}),"\n",(0,i.jsx)(n.li,{children:"The SM is defined by a series of State Transition Functions (STFs). These are the functions that change the State in response to an Input."}),"\n",(0,i.jsx)(n.li,{children:"The Inputs are blockchain events that your application is configured to monitor. The STFs process these on-chain events and transform them into updates for your application's state."}),"\n",(0,i.jsx)(n.li,{children:"The SM is deterministic, meaning multiple instances of a Paima Engine Node processing the same inputs in the same order will always generate the exact same final State."}),"\n",(0,i.jsx)(n.li,{children:"The entire process runs within the Paima Engine Node."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"                     State Machine\nBlock Chain -> STF-1 (e.g., handle mint)    -> Application Data\nEvents         STF-2 (e.g., handle transfer)   (database)\n               STF-N (...)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Let's start with a practical example where calls to a ",(0,i.jsx)(n.code,{children:"Paima L2"})," contract are converted into actions."]}),"\n",(0,i.jsx)(n.p,{children:"For example, this STF:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'stm.addStateTransition(\n  "create",\n  function* (data) {\n    const { game_id } = data.parsedInput.payload;\n    yield* World.resolve(create_game, {\n      game_id: game_id,\n      block_height: data.blockHeight,\n    });\n    return;\n  },\n);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If the contract ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/paima-l2-contract",children:"PaimaL2 Event"})," function ",(0,i.jsx)(n.code,{children:"submitGameInput"})," is called with payload ",(0,i.jsx)(n.code,{children:'["create", "0x1234"]'}),", this creates a row in your ",(0,i.jsx)(n.code,{children:"games"})," table, with id = ",(0,i.jsx)(n.code,{children:"0x1234"})]}),"\n",(0,i.jsx)(n.p,{children:'Now your application can read the database and use the created "game" from the table.'}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["We will be using ",(0,i.jsx)(n.code,{children:"/templates/evm-midnight/"})," as example for the following definitions."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In the example template the state-machine file is named ",(0,i.jsx)(n.code,{children:"./packages/client/node/src/state-machine.ts"})," and contains ",(0,i.jsx)(n.code,{children:"state-transition functions"}),' or "STF" that are executed each time the corresponding ',(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/sync-service",children:"event prefix"})," defined in the ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/grammar",children:"grammar"})," is called."]}),"\n",(0,i.jsxs)(n.p,{children:["For example: each time a ",(0,i.jsx)(n.code,{children:"ERC721 Token es Minted"}),", or a ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/paima-l2-contract",children:"PaimaL2 Event"})," is sent a ",(0,i.jsx)(n.code,{children:"STF"})," is executed, if defined."]}),"\n",(0,i.jsxs)(n.p,{children:["In this example, the prefix ",(0,i.jsx)(n.code,{children:"transfer_erc721"})," we execute a write into the ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/database",children:"database"})," calling ",(0,i.jsx)(n.code,{children:"insertStateMachineInput"}),".\nThis function is called when an ERC721 token is either minted or transferred."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'stm.addStateTransition(\n  "transfer_erc721",\n  function* (data) {\n    const { to, from, tokenId } = data.parsedInput.payload;\n    yield* World.resolve(insertStateMachineInput, {\n      message: `transfer token=${tokenId} from wallet=${from} to wallet=${to}`,\n      block_height: data.blockHeight,\n    });\n    return;\n  },\n);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"determinism",children:"Determinism"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"IMPORTANT"}),"\nThese STF functions MUST be deterministic."]}),"\n",(0,i.jsx)(n.p,{children:"Paima Engine applications are designed to be Replicated State Machines, which means that anyone running a paima engine node can independently process all the inputs in the exact same order and arrive at the identical, correct game state. This deterministic nature is what makes decentralized apps possible without a central server."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Therefore STF MUST NOT use ",(0,i.jsx)(n.code,{children:"Math.random()"}),", ",(0,i.jsx)(n.code,{children:"new Date()"}),", do external API calls, or any function that might give different results on different times or machines."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"adding-a-new-stf",children:"Adding a new STF"}),"\n",(0,i.jsx)(n.p,{children:"The STF will be executed each time a contract event is executed. So we need to define/capture:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Contract"}),"\n",(0,i.jsx)(n.li,{children:"Monitor/Sync"}),"\n",(0,i.jsx)(n.li,{children:"Grammar"}),"\n",(0,i.jsx)(n.li,{children:"STF"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To do so, we can follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add your ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/contracts",children:"contract"})]}),"\n",(0,i.jsxs)(n.p,{children:["Let's create and add a ERC20 Fungible Solidity contract for ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/chains/evm",children:"EVM"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from "@openzeppelin/contracts/token/ERC20/ERC20.sol";\n\ncontract Erc20Dev is ERC20 {\n    constructor() ERC20("Mock ERC20", "MERC") {}\n\n    function mint(address _to, uint256 _amount) external {\n        _mint(_to, _amount);\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["More instructions about ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/contracts",children:"contracts options"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/sync-service",children:"scheduled prefix"})," that will be called."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'builder.addPrimitive(\n      (syncProtocols) => syncProtocols.parallelEvmRPC_fast,\n      (network, deployments, syncProtocol) => ({\n        name: "My_ERC20_Token",\n        type: ConfigPrimitiveType.EvmRpcERC20,\n        startBlockHeight: 0,\n        contractAddress: contractAddressesEvmMain()\n          .chain31337["PaimaErc20DevModule#PaimaErc20Dev"],\n        abi: getEvmEvent(erc20dev.abi, "Transfer(address,address,uint256)"),\n        scheduledPrefix: \'transfer_merc\', // <- SCHEDULED PREFIX \n      }),\n    )\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This will allow to track the event.",(0,i.jsx)(n.br,{}),"\n","More instruction about ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/sync-service",children:"scheduled prefixes and sync-service options"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add the corresponding ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/grammar",children:"grammar"})]}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"grammar.ts"})," file you can add custom grammar parsers"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'export const grammar = {\n...\ntransfer_merc: [\n    [\n      "payload",\n      Type.Object({\n        to: Type.String(),\n        from: Type.String(),\n        value: Type.String(),\n      }),\n    ],\n  ],\n...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This will parse the information provided in the ",(0,i.jsx)(n.code,{children:"My_ERC20_Token"})," primitive, and try to parse the function provided in the event ",(0,i.jsx)(n.code,{children:"Transfer(address,address,uint256)"}),".\nIf successful, the STF named ",(0,i.jsx)(n.code,{children:"transfer_merc"})," will be executed."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"STF Implementation"}),"\n",(0,i.jsx)(n.p,{children:"The last phase is setting up the STF itself.\nWe will implement a function to keep the historic record of transfers and mints."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'stm.addStateTransition(\n  "transfer_merc",\n  function* (data) {\n    const { to, from, value } = data.parsedInput.payload;\n    yield* World.resolve(insertIntoHistory, {\n      to_wallet: to, \n      from_wallet: from,\n      amount: value\n      block_height: data.blockHeight,\n    });\n    return;\n  },\n);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This function will run each time there is a ",(0,i.jsx)(n.code,{children:"mint"})," or ",(0,i.jsx)(n.code,{children:"transfer"})," in the ERC20 contract."]}),"\n",(0,i.jsxs)(n.p,{children:["More about the  ",(0,i.jsx)(n.code,{children:"yield* World.resolve(...)"})," and ",(0,i.jsx)(n.code,{children:"function*"})," in the ",(0,i.jsx)(n.strong,{children:"STF Coroutines"})," section below."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Database Methods (Optional)"}),"\n",(0,i.jsxs)(n.p,{children:["For data management you can setup your custom tables and function. To do so, first update the migration file ",(0,i.jsx)(n.code,{children:"first.sql"})," and add a table for the historic records:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE erc20_history (\n  id SERIAL PRIMARY KEY,\n  block_height INTEGER NOT NULL,\n  to_wallet TEXT NOT NULL,\n  from_wallet TEXT NOT NULL,\n  amount INTEGER NOT NULL\n);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["edit ",(0,i.jsx)(n.code,{children:"sm_example.sql"})," and add a query to insert"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"/* @name insertIntoHistory */\nINSERT INTO erc20_history\n(id, block_height, to_wallet, from_wallet, amount)\nVALUES\n(:id!, :block_height!, :to_wallet!, :from_wallet!, :amount!)\n;\n"})}),"\n",(0,i.jsx)(n.p,{children:"and compile your queries with"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"deno task -f @example/database pgtyped:update\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will create a safe typescript function to insert into the database.\nMore information about ",(0,i.jsx)(n.a,{href:"/paima-v-next-docs/home/components/database",children:"databases"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Now your STF is ready to be used!"})}),"\n",(0,i.jsxs)(n.p,{children:["Now just call the deployed MERC contract.",(0,i.jsx)(n.br,{}),"\n","Each change will be stored in the database."]}),"\n",(0,i.jsx)(n.p,{children:"For example, if the contract was called 4 times:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"id"}),(0,i.jsx)(n.th,{children:"block_height"}),(0,i.jsx)(n.th,{children:"to_wallet"}),(0,i.jsx)(n.th,{children:"from_wallet"}),(0,i.jsx)(n.th,{children:"amount"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"100"}),(0,i.jsx)(n.td,{children:"0x1234"}),(0,i.jsx)(n.td,{children:"0x0"}),(0,i.jsx)(n.td,{children:"10"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"330"}),(0,i.jsx)(n.td,{children:"0xabcd"}),(0,i.jsx)(n.td,{children:"0x5999"}),(0,i.jsx)(n.td,{children:"99"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"499"}),(0,i.jsx)(n.td,{children:"0xcccc"}),(0,i.jsx)(n.td,{children:"0x0"}),(0,i.jsx)(n.td,{children:"30"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"4"}),(0,i.jsx)(n.td,{children:"609"}),(0,i.jsx)(n.td,{children:"0x1234"}),(0,i.jsx)(n.td,{children:"0xcccc"}),(0,i.jsx)(n.td,{children:"40"})]})]})]}),"\n",(0,i.jsxs)(n.h2,{id:"stf-coroutines-and-the-world-effect-system",children:["STF Coroutines and the ",(0,i.jsx)(n.code,{children:"World"})," Effect System"]}),"\n",(0,i.jsx)(n.p,{children:'A State Transition Function (STF) has a unique challenge: it must be a pure, deterministic function, but it also needs to interact with the "outside world" by reading from and writing to the database.'}),"\n",(0,i.jsx)(n.p,{children:"To solve this, Paima STFs are written as Coroutines (specifically, JavaScript Generator Functions) instead of standard async functions. This allows the STF to pause its execution and request that the Paima Engine perform a side effect (like a database query) on its behalf. This pattern ensures that all interactions with the outside world are controlled, deterministic, and replayable."}),"\n",(0,i.jsx)(n.p,{children:"Instead of await, you will use the yield* keyword to perform these controlled, asynchronous operations."}),"\n",(0,i.jsx)(n.h3,{id:"stf-function-definition",children:"STF Function Definition"}),"\n",(0,i.jsx)(n.p,{children:"Every STF is defined as a generator function, which is denoted by the asterisk (*) after the function keyword. It receives a single data object as its argument."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'// Note the `*` which defines this as a generator function\nstm.addStateTransition(\n  "my_action",\n  function* (data) {\n    // STF logic goes here...\n  }\n);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"data"})," object contains all the context for the current input being processed:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Field"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"blockHeight"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"PaimaBlockNumber"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The Paima L2 block number for this input."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"blockTimestamp"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"TimestampMs"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The Paima L2 block timestamp."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"conciseInput"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The raw, unparsed input string. Useful for debugging."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"accountId"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"number | undefined"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The Paima Account ID the signer's wallet belongs to, if any."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"signerAddress"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"WalletAddress | undefined"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The on-chain wallet address that signed/initiated the transaction."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"randomGenerator"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"Prando"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"A deterministic, seeded pseudo-random number generator."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"parsedInput"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"GrammarType"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The parsed and type-safe input, according to your defined grammar."})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"the-world-object-performing-side-effects",children:["The ",(0,i.jsx)(n.code,{children:"World"})," Object: Performing Side Effects"]}),"\n",(0,i.jsxs)(n.p,{children:["To perform any side effect, you must use the ",(0,i.jsx)(n.code,{children:"World"})," object. It is the only safe and permitted way for your STF to interact with the database or run other asynchronous logic."]}),"\n",(0,i.jsx)(n.h4,{id:"worldresolvequery-input",children:(0,i.jsx)(n.code,{children:"World.resolve(query, input)"})}),"\n",(0,i.jsx)(n.p,{children:"This is the primary way to interact with the database. It executes a type-safe database query that you have defined."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"query"})}),": The pgtyped-generated query function you want to run."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"input"})}),": The parameters for the query."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// From our previous example, creating a new game row in the database.\nyield* World.resolve(create_game, {\n  game_id: game_id,\n  block_height: data.blockHeight,\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"worldpromisepromise",children:(0,i.jsx)(n.code,{children:"World.promise(promise)"})}),"\n",(0,i.jsxs)(n.p,{children:["This function allows you to execute a custom ",(0,i.jsx)(n.code,{children:"Promise"}),". However, this comes with a critical rule."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["WARNING: ",(0,i.jsx)(n.code,{children:"World.promise"})," MUST BE DETERMINISTIC"]}),"\nAny promise passed to ",(0,i.jsx)(n.code,{children:"World.promise"})," ",(0,i.jsx)(n.strong,{children:"must"})," be 100% deterministic. It must always return the exact same result given the same input, no matter when or where it is run."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"DO NOT USE:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fetch"})," or any network requests."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"new Date()"})," or any access to the system clock."]}),"\n",(0,i.jsx)(n.li,{children:"Reading from the file system."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Math.random()"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Using a non-deterministic promise here will break your state machine and cause nodes to fall out of sync. This function is intended for complex, pure computations that are CPU-intensive and benefit from being run asynchronously without blocking."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Safe Example:"})," A complex, pure calculation."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"async function complexDeterministicCalculation(a: number, b: number): Promise<number> {\n  // A long, CPU-intensive but pure calculation\n  await new Promise((resolve) => setTimeout(resolve, 100)); // Simulates heavy work\n  return (a + b) * (a - b); // Always the same result for the same a and b\n}\n\n// Inside an STF:\nconst result = yield* World.promise(complexDeterministicCalculation(10, 5));\n// result will always be 75\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},6613:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(9593);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
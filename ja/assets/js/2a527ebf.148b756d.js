"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6109],{5604:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"home/paima-standards/prc3","title":"PRC-3: Paima Inverse Projection Interface (NFTs)","description":"Core Idea*: A standard for representing in-game L2 assets as fully-tradable ERC721 NFTs on a more liquid L1 chain.","source":"@site/docs/home/400-paima-standards/prc3.md","sourceDirName":"home/400-paima-standards","slug":"/home/paima-standards/prc3","permalink":"/paima-v-next-docs/ja/home/paima-standards/prc3","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/400-paima-standards/prc3.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PRC-2: Paima Hololocker Interface","permalink":"/paima-v-next-docs/ja/home/paima-standards/prc2"},"next":{"title":"PRC-5: Paima Inverse Projection Interface for ERC1155","permalink":"/paima-v-next-docs/ja/home/paima-standards/prc4"}}');var s=t(3261),r=t(6404);const i={},o="PRC-3: Paima Inverse Projection Interface (NFTs)",d={},c=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"prc-3-paima-inverse-projection-interface-nfts",children:"PRC-3: Paima Inverse Projection Interface (NFTs)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Core Idea"}),": A standard for representing in-game L2 assets as fully-tradable ERC721 NFTs on a more liquid L1 chain."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Problem Solved"}),': Assets that only exist within a game\'s L2 state are illiquid and cannot be traded on major NFT marketplaces like OpenSea. PRC-3 allows these assets to be "projected" outwards, creating an L1 NFT that acts as a "claim" on the L2 asset, with its metadata being served directly and dynamically from the Paima Engine node.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"How it Works (High Level)"}),": An ",(0,s.jsx)(n.code,{children:"IInverseProjectedNft"})," contract is deployed on an L1. When a user wants to sell an L2 asset, an NFT is minted on the L1. The ",(0,s.jsx)(n.code,{children:"tokenURI"})," of this NFT points to the Paima Engine's API. When a marketplace queries this URI, the Paima node serves the current, up-to-date metadata for the in-game asset. When the NFT is burned on the L1, the in-game asset is released or transferred on the L2."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Components"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"IInverseProjectedNft"})," (Solidity)"]}),": A modified ERC721 interface."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Dynamic ",(0,s.jsx)(n.code,{children:"tokenURI"})]}),": The metadata URI is not a static link to IPFS but an API call to a Paima node."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Public ",(0,s.jsx)(n.code,{children:"mint()"})," function"]}),": Allows for the creation of L1 NFTs that represent L2 state."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URI Overrides"}),": The ",(0,s.jsx)(n.code,{children:"tokenURI"})," function has overloads, allowing users to specify their own trusted Paima node for metadata, ensuring decentralization."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},6404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(9593);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);
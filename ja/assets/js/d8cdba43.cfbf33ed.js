"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8522],{6404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(9593);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}},7852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"home/components/api","title":"API","description":"The Paima Engine Node runs a powerful, built-in HTTP server that exposes a RESTful API. This API is the primary way for your Frontend (dApp) and other external services to read the real-time, aggregated state of your application.","source":"@site/docs/home/100-components/103-api.md","sourceDirName":"home/100-components","slug":"/home/components/api","permalink":"/ja/home/components/api","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/100-components/103-api.md","tags":[],"version":"current","sidebarPosition":103,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"State Machine","permalink":"/ja/home/components/state-machine"},"next":{"title":"Paima L2 Contract","permalink":"/ja/home/components/paima-l2-contract"}}');var s=n(3261),r=n(6404);const a={},o="API",l={},d=[{value:"Built-in API Endpoints",id:"built-in-api-endpoints",level:2},{value:"Creating Custom API Endpoints",id:"creating-custom-api-endpoints",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"api",children:"API"})}),"\n",(0,s.jsxs)(t.p,{children:["The Paima Engine Node runs a powerful, built-in HTTP server that exposes a RESTful API. This API is the primary way for your ",(0,s.jsx)(t.a,{href:"/ja/home/components/frontend",children:"Frontend (dApp)"})," and other external services to read the real-time, aggregated state of your application."]}),"\n",(0,s.jsxs)(t.p,{children:["You can explore the API interactively via the OpenAPI (Swagger) interface, typically available at ",(0,s.jsx)(t.code,{children:"http://localhost:PORT/documentation"})," in your local development environment."]}),"\n",(0,s.jsx)(t.h2,{id:"built-in-api-endpoints",children:"Built-in API Endpoints"}),"\n",(0,s.jsx)(t.p,{children:"Your Paima Engine node comes with a set of default endpoints to query system status and generic data structures."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Path"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/health"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A simple health check to see if the node is running. Returns ",(0,s.jsx)(t.code,{children:'{"status": "ok"}'}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/block-heights"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Shows the current sync progress for all connected chains."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/addresses"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Returns a paginated list of all wallets and their associated Paima accounts."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/scheduled-data"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Shows a paginated list of all pending scheduled inputs (timers/ticks)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/tables/:tableName"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A powerful generic endpoint to query any public table in your database. It supports automatic keyset pagination for high performance."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/primitives/:primitiveName"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Similar to ",(0,s.jsx)(t.code,{children:"/tables"}),", but specifically for querying the data aggregated by a primitive (e.g., all ERC721 token owners)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/rpc/evm"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A partial implementation of the Ethereum JSON-RPC specification, allowing you to use standard EVM tools like ",(0,s.jsx)(t.code,{children:"viem"})," to query the Paima L2 state."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"/grammar"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Returns the JSON representation of the grammar your state machine is using."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"creating-custom-api-endpoints",children:"Creating Custom API Endpoints"}),"\n",(0,s.jsxs)(t.p,{children:["While the built-in endpoints are useful, you will often need to create custom routes that expose specific, aggregated data tailored to your application's needs. Paima Engine makes this easy by allowing you to define a custom ",(0,s.jsx)(t.code,{children:"apiRouter"})," function."]}),"\n",(0,s.jsxs)(t.p,{children:["This function is passed a ",(0,s.jsx)(t.code,{children:"fastify"})," server instance, allowing you to register your own GET, POST, or other routes."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Example (",(0,s.jsx)(t.code,{children:"api.ts"}),"):"]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { type Static, Type } from "@sinclair/typebox";\nimport { runPreparedQuery } from "@paima/db";\nimport { getMyCustomGameData } from "@example/database"; // Your custom pgtyped query\nimport type { Pool } from "pg";\nimport type { StartConfigApiRouter } from "@paima/runtime";\nimport type fastify from "fastify";\n\n// Define the schema for the API response using TypeBox.\n// This provides automatic validation and generates OpenAPI documentation.\nconst ResponseSchema = Type.Array(Type.Object({\n  token_id: Type.String(),\n  owner: Type.Union([Type.Null(), Type.String()]),\n  property_name: Type.String(),\n  value: Type.String(),\n}));\n\n/**\n * Register your custom API endpoints here.\n * @param server - The Fastify instance provided by the Paima runtime.\n * @param dbConn - A database connection pool.\n */\nexport const apiRouter: StartConfigApiRouter = async function (\n  server: fastify.FastifyInstance,\n  dbConn: Pool,\n): Promise<void> {\n  server.get<{\n    Reply: Static<typeof ResponseSchema>;\n  }>("/api/my-game/get-characters", async (request, reply) => {\n    // Execute a pre-defined, type-safe database query\n    const result = await runPreparedQuery(\n      getMyCustomGameData.run(undefined, dbConn),\n      "/api/my-game/get-characters",\n    );\n    reply.send(result);\n  });\n};\n'})}),"\n",(0,s.jsx)(t.p,{children:"By defining custom endpoints, you can create an efficient, tailored API that provides your frontend with exactly the data it needs, in the format it expects, without exposing the raw database structure."}),"\n",(0,s.jsxs)(t.p,{children:["To define and read the database queries see the ",(0,s.jsx)(t.a,{href:"/ja/home/components/database",children:"database section"})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);
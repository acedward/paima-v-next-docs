"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[742],{4051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"home/templates/evm-midnight","title":"EVM-Midnight Template","description":"* Location: /templates/evm-midnight","source":"@site/docs/home/1200-templates/1201-evm-midnight.md","sourceDirName":"home/1200-templates","slug":"/home/templates/evm-midnight","permalink":"/ja/home/templates/evm-midnight","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/1200-templates/1201-evm-midnight.md","tags":[],"version":"current","sidebarPosition":1201,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Game Examples","permalink":"/ja/home/example-tarochi/"},"next":{"title":"Wallets Demo","permalink":"/ja/home/templates/wallets"}}');var a=n(3261),s=n(6613);const r={},o="EVM-Midnight Template",d={},c=[{value:"Core Concept: Extending NFTs with Private Metadata",id:"core-concept-extending-nfts-with-private-metadata",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Terminal",id:"terminal",level:3},{value:"Browser",id:"browser",level:3},{value:"The Components in Action",id:"the-components-in-action",level:2},{value:"On-Chain Logic",id:"on-chain-logic",level:2},{value:"1. The EVM Contract (<code>Erc721Dev.sol</code>)",id:"1-the-evm-contract-erc721devsol",level:3},{value:"2. The Midnight Contract",id:"2-the-midnight-contract",level:3},{value:"The State Machine (<code>state-machine.ts</code>)",id:"the-state-machine-state-machinets",level:2},{value:"1. <code>transfer-assets</code> STF (Listening to EVM)",id:"1-transfer-assets-stf-listening-to-evm",level:3},{value:"2. <code>midnightContractState</code> STF (Listening to Midnight)",id:"2-midnightcontractstate-stf-listening-to-midnight",level:3}];function l(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"evm-midnight-template",children:"EVM-Midnight Template"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Location: ",(0,a.jsx)(t.code,{children:"/templates/evm-midnight"})]}),"\n",(0,a.jsx)(t.li,{children:"Highlights: EVM & Midnight Interoperability. Web Application to create ERC721 Tokens and add metadata though a Midnight Contract."}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"evm-midnight"})," template is a powerful starting point that demonstrates one of Paima Engine's core strengths: ",(0,a.jsx)(t.strong,{children:"multi-chain interoperability"}),". It showcases a complete, end-to-end dApp that seamlessly combines a public, asset-focused EVM chain with a private, computation-focused ZK chain (Midnight)."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"evm-midnight-web",src:n(6634).A+"",width:"2680",height:"2478"})}),"\n",(0,a.jsx)(t.h2,{id:"core-concept-extending-nfts-with-private-metadata",children:"Core Concept: Extending NFTs with Private Metadata"}),"\n",(0,a.jsxs)(t.p,{children:["The goal of this template is to create a dApp where users can own a standard ",(0,a.jsx)(t.strong,{children:"ERC721 NFT"})," on an EVM chain, but then use the privacy features of ",(0,a.jsx)(t.strong,{children:"Midnight"})," to add or update secret metadata associated with that NFT."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The ownership of the NFT is public and managed by the EVM contract."}),"\n",(0,a.jsxs)(t.li,{children:['The special properties or "enchantments" of the NFT are managed privately on Midnight. Only the owner can execute the ZK transaction to add a property, but the ',(0,a.jsx)(t.em,{children:"result"})," (the new property) is made public on Midnight's ledger for the Paima Engine to see."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This pattern is a blueprint for many real-world applications, such as:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Private Stats"}),": An NFT character's stats (e.g., strength, intelligence) could be private until a battle."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Sealed-Bid Auctions"}),": Bids for an NFT could be kept private until the auction ends."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Verifiable Randomness"}),": An NFT could be associated with a random attribute that is generated privately and then revealed."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"# Check for external dependencies\n./../check.sh\n\n# Install packages\ndeno install --allow-scripts && ./patch.sh\n\n# Compile contracts\ndeno task build:evm\ndeno task build:midnight\n\n# Launch Paima Engine Node\ndeno task dev\n"})}),"\n",(0,a.jsx)(t.p,{children:"Now you should see the dApp running in your browser!"}),"\n",(0,a.jsx)(t.h3,{id:"terminal",children:"Terminal"}),"\n",(0,a.jsx)("iframe",{src:"https://drive.google.com/file/d/1vLHmm9HrPrKiIHJlnnX3aopeX0J-A9Oz/preview",width:"640",height:"480",allow:"autoplay"}),"\n",(0,a.jsx)(t.h3,{id:"browser",children:"Browser"}),"\n",(0,a.jsx)("iframe",{src:"https://drive.google.com/file/d/1hDh5PkKQdDx8UXnBsS1clypvXF14Msvm/preview",width:"640",height:"480",allow:"autoplay"}),"\n",(0,a.jsx)(t.h2,{id:"the-components-in-action",children:"The Components in Action"}),"\n",(0,a.jsxs)(t.p,{children:["When you run ",(0,a.jsx)(t.code,{children:"deno task dev"})," for this template, the ",(0,a.jsx)(t.a,{href:"/ja/home/components/processes",children:"Process Orchestrator"})," sets up a complete local environment:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Hardhat EVM Node"}),": A local EVM blockchain."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Midnight Stack"}),": The full local Midnight environment, including the node, indexer, and proof server."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Paima Services"}),": The development database, log collector, TUI, and the Paima Explorer."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Paima Engine"}),": Node to sync the chains."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Frontend"}),": A simple web interface to interact with the contracts."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"on-chain-logic",children:"On-Chain Logic"}),"\n",(0,a.jsxs)(t.h3,{id:"1-the-evm-contract-erc721devsol",children:["1. The EVM Contract (",(0,a.jsx)(t.code,{children:"Erc721Dev.sol"}),")"]}),"\n",(0,a.jsxs)(t.p,{children:["The EVM side is a standard, minimal ERC721 contract. Its only job is to manage the minting and transferring of NFTs. Paima Engine will monitor its ",(0,a.jsx)(t.code,{children:"Transfer"})," event to track ownership."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-solidity",children:'pragma solidity ^0.8.20;\nimport {ERC721} from "@openzeppelin/contracts/token/ERC721/ERC721.sol";\ncontract Erc721Dev is ERC721 {\n    constructor() ERC721("Mock ERC721", "MERC") {}\n    function mint(address _to, uint256 _tokenId) external {\n        _mint(_to, _tokenId);\n    }\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"2-the-midnight-contract",children:"2. The Midnight Contract"}),"\n",(0,a.jsxs)(t.p,{children:["The Midnight contract is where the private logic lives. Its ",(0,a.jsx)(t.code,{children:"updateAsset"})," circuit accepts four private inputs: the EVM contract address, the NFT's token ID, and a key-value pair for the new property."]}),"\n",(0,a.jsxs)(t.p,{children:["When a user executes this circuit, their private inputs are used to generate a ZK proof. The transaction updates the contract's public ",(0,a.jsx)(t.code,{children:"ledger"}),", revealing the new property without disclosing who added it or what other private data was used in the computation."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"pragma language_version 0.17;\n\nimport CompactStandardLibrary;\n\n// These are the public state variables Paima will monitor.\nexport ledger contract_address: Bytes<64>;\nexport ledger token_id: Bytes<64>;\nexport ledger property_name: Bytes<32>;\nexport ledger value: Bytes<32>;\n\n// This is the private state transition.\nexport circuit updateAsset(\n  contract_address_: Bytes<64>,\n  token_id_: Bytes<64>,\n  property_name_: Bytes<32>,\n  value_: Bytes<32>,\n): [] {\n  // The 'disclose' keyword makes the private input public\n  // by writing it to the corresponding ledger variable.\n  contract_address = disclose(contract_address_);\n  token_id = disclose(token_id_);\n  property_name = disclose(property_name_);\n  value = disclose(value_);\n}\n"})}),"\n",(0,a.jsxs)(t.h2,{id:"the-state-machine-state-machinets",children:["The State Machine (",(0,a.jsx)(t.code,{children:"state-machine.ts"}),")"]}),"\n",(0,a.jsx)(t.p,{children:"The State Machine has two key State Transition Functions (STFs) that listen for events from these two chains."}),"\n",(0,a.jsxs)(t.h3,{id:"1-transfer-assets-stf-listening-to-evm",children:["1. ",(0,a.jsx)(t.code,{children:"transfer-assets"})," STF (Listening to EVM)"]}),"\n",(0,a.jsxs)(t.p,{children:["This STF is triggered whenever an ERC721 ",(0,a.jsx)(t.code,{children:"Transfer"})," event occurs on the EVM chain. Its job is simple: to keep track of the current owner of each NFT."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'stm.addStateTransition(\n  "transfer-assets",\n  function* (data) {\n    // Extract payload from the Transfer(from, to, tokenId) event\n    const { to, tokenId } = data.parsedInput.payload;\n    const contract_address = "0x1234"; // The address of the deployed ERC721 contract\n\n    // Update the database to record the new owner of the NFT.\n    yield* World.resolve(insertEvmMidnight, {\n      contract_address,\n      token_id: tokenId,\n      owner: to,\n      block_height: data.blockHeight,\n    });\n  },\n);\n'})}),"\n",(0,a.jsxs)(t.h3,{id:"2-midnightcontractstate-stf-listening-to-midnight",children:["2. ",(0,a.jsx)(t.code,{children:"midnightContractState"})," STF (Listening to Midnight)"]}),"\n",(0,a.jsxs)(t.p,{children:["This STF is triggered whenever the public ",(0,a.jsx)(t.code,{children:"ledger"})," of the Midnight contract changes. Its job is to take the new metadata revealed by the ZK transaction and link it to the corresponding NFT in the database."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'stm.addStateTransition(\n  "midnightContractState",\n  function* (data) {\n    // 1. Decode the public ledger state from the raw Midnight payload.\n    const contract_address = decodeString(...);\n    const token_id = decodeString(...);\n    const property_name = decodeString(...);\n    const value = decodeString(...);\n\n    // 2. Check if we already know about this NFT from the EVM.\n    //    If not, create a record for it.\n    const [nftRecord] = yield* World.resolve(getEvmMidnightByTokenId, {\n      contract_address,\n      token_id,\n    });\n    if (!nftRecord) {\n      yield* World.resolve(insertEvmMidnight, { /* ... */ });\n    }\n\n    // 3. Insert the new metadata property into the database,\n    //    linking it to the NFT.\n    yield* World.resolve(insertEvmMidnightProperty, {\n      contract_address,\n      token_id,\n      property_name,\n      value,\n      block_height: data.blockHeight,\n    });\n  },\n);\n'})}),"\n",(0,a.jsx)(t.p,{children:"By combining these two STFs, the Paima Engine builds a unified view of the dApp's state, merging public ownership data from EVM with privately-added metadata from Midnight."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},6613:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(9593);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},6634:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/evm-midnight-2caa21eab4620a4202f268210d0175dd.png"}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9150],{1976:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"home/quickstart/quickstart","title":"Quick Start","description":"Linux and Macos are supported. Windows WSL is experimental.","source":"@site/docs/home/10-quickstart/10-quickstart.md","sourceDirName":"home/10-quickstart","slug":"/quick-start","permalink":"/paima-v-next-docs/ja/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/10-quickstart/10-quickstart.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"slug":"/quick-start"},"sidebar":"tutorialSidebar","previous":{"title":"What is Paima Engine?","permalink":"/paima-v-next-docs/ja/what-is-paima-engine"},"next":{"title":"Paima Engine Components","permalink":"/paima-v-next-docs/ja/home/components/"}}');var t=i(3261),s=i(6404);const r={sidebar_position:10,slug:"/quick-start"},o="Quick Start",c={},d=[{value:"Terminal",id:"terminal",level:3},{value:"Browser",id:"browser",level:3},{value:"Packages &amp; Folder Structure",id:"packages--folder-structure",level:2},{value:"State Machine",id:"state-machine",level:2},{value:"Frontend (dApp)",id:"frontend-dapp",level:2},{value:"Writes (Sending Actions)",id:"writes-sending-actions",level:3},{value:"Reads",id:"reads",level:3},{value:"Chain Config &amp; Sync Service",id:"chain-config--sync-service",level:2},{value:"Contracts &amp; The <code>PaimaL2Contract</code>",id:"contracts--the-paimal2contract",level:2},{value:"Process Orchestrator",id:"process-orchestrator",level:2},{value:"Grammar",id:"grammar",level:2},{value:"Next Steps: Dive Deeper into Paima Engine",id:"next-steps-dive-deeper-into-paima-engine",level:2},{value:"Core Components Deep Dive",id:"core-components-deep-dive",level:3},{value:"Advanced Features &amp; Services",id:"advanced-features--services",level:3},{value:"Multi-Chain Development",id:"multi-chain-development",level:3},{value:"Deployment and Lifecycle",id:"deployment-and-lifecycle",level:3},{value:"Standards and Interoperability (PRCs)",id:"standards-and-interoperability-prcs",level:3},{value:"See it all in Action: The Tarochi Example",id:"see-it-all-in-action-the-tarochi-example",level:3},{value:"Contributing to Paima Engine",id:"contributing-to-paima-engine",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Linux and Macos are supported. Windows WSL is experimental."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["First clone the repository and copy the ",(0,t.jsx)(n.code,{children:"/example-project"})," folder.",(0,t.jsx)(n.br,{}),"\n","This will give us a working template."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"git clone git@github.com:PaimaStudios/paima-engine.git\ngit checkout v-next\ncd paima-engine/templates/evm-midnight\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Check for external dependencies\n./check.sh\n\n# Install packages\ndeno install --allow-scripts && ./patch.sh\n\n# Compile contracts\ndeno task build:evm\ndeno task build:midnight\n\n# Launch Paima Engine Node\ndeno task dev\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now you should see the dApp running in your browser!"}),"\n",(0,t.jsx)(n.h3,{id:"terminal",children:"Terminal"}),"\n",(0,t.jsx)("iframe",{src:"https://drive.google.com/file/d/1vLHmm9HrPrKiIHJlnnX3aopeX0J-A9Oz/preview",width:"640",height:"480",allow:"autoplay"}),"\n",(0,t.jsx)(n.h3,{id:"browser",children:"Browser"}),"\n",(0,t.jsx)("iframe",{src:"https://drive.google.com/file/d/1hDh5PkKQdDx8UXnBsS1clypvXF14Msvm/preview",width:"640",height:"480",allow:"autoplay"}),"\n",(0,t.jsx)(n.p,{children:"Once you have the template up and running, there are different parts you can modify or extend."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Machine"}),": Logic and rules for events."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Front End"}),": User side App."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chain Config"}),": Connect different chains."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Process Orchestrator"}),": Decide what processes to start and run for development."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Contracts & Paima-L2"}),": Deploy and connect different contracts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Grammar"}),": Define Paima-L2 Contract valid Inputs"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["More ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/",children:"Components"})]}),"\n",(0,t.jsx)(n.h2,{id:"packages--folder-structure",children:"Packages & Folder Structure"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["We will be using ",(0,t.jsx)(n.code,{children:"/templates/evm-midnight/"})," as example for the following definitions."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Default folder structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"|-- deno.json                     # workspace definition\n|-- packages\n     |-- client                   # paima engine node  \n     |     |-- database           # database queries and tables\n     |     |-- node               # node startup, api, and state machine\n     |\n     |-- frontend                 # web app\n     | \n     |-- shared                   # shared components between client and frontend\n     |     |-- contracts/evm      # hardhat & evm contracts\n     |     |-- contracts/midnight # midnight contracts\n     |     |-- data-types         # grammar and node sync/contract definitions \n"})}),"\n",(0,t.jsx)(n.p,{children:"Workspace packages:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\nclient/database              @example/database\nclient/node                  @example/node\nfrontend                     @example/frontend\nshared/contracts/evm         @example/evm-contracts\nshared/contracts/midnight    @example/midnight-contracts\nshared/contracts/data-types  @example/data-types\n"})}),"\n",(0,t.jsx)(n.h2,{id:"state-machine",children:"State Machine"}),"\n",(0,t.jsx)(n.p,{children:"A State Machine (SM) is the core of your Paima Engine application, defining its logic and rules. Let's break down the concept:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"It has a State, which is the complete record of the Paima Engine Node at any given moment (e.g., user assets, statuses, etc.), stored in a database."}),"\n",(0,t.jsx)(n.li,{children:"The SM is defined by a series of State Transition Functions (STFs). These are the functions that change the State in response to an Input."}),"\n",(0,t.jsx)(n.li,{children:"The Inputs are blockchain events that your application is configured to monitor. The STFs process these on-chain events and transform them into updates for your application's state."}),"\n",(0,t.jsx)(n.li,{children:"The SM is deterministic, meaning multiple instances of a Paima Engine Node processing the same inputs in the same order will always generate the exact same final State."}),"\n",(0,t.jsx)(n.li,{children:"The entire process runs within the Paima Engine Node."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"                     State Machine\nBlock Chain -> STF-1 (e.g., handle mint)    -> Application Data\nEvents         STF-2 (e.g., handle transfer)   (database)\n               STF-N (...)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Let's start with a practical example where calls to a ",(0,t.jsx)(n.code,{children:"Paima L2"})," contract are converted into actions."]}),"\n",(0,t.jsx)(n.p,{children:"For example, this STF:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'stm.addStateTransition(\n  "create",\n  function* (data) {\n    const { game_id } = data.parsedInput.payload;\n    yield* World.resolve(create_game, {\n      game_id: game_id,\n      block_height: data.blockHeight,\n    });\n    return;\n  },\n);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If the contract ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/paima-l2-contract",children:"PaimaL2 Event"})," function ",(0,t.jsx)(n.code,{children:"submitGameInput"})," is called with payload ",(0,t.jsx)(n.code,{children:'["create", "0x1234"]'}),", this creates a row in your ",(0,t.jsx)(n.code,{children:"games"})," table, with id = ",(0,t.jsx)(n.code,{children:"0x1234"})]}),"\n",(0,t.jsx)(n.p,{children:'Now your application can read the database and use the created "game" from the table.'}),"\n",(0,t.jsxs)(n.p,{children:["More about the ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/state-machine",children:"State Machine"})]}),"\n",(0,t.jsx)(n.h2,{id:"frontend-dapp",children:"Frontend (dApp)"}),"\n",(0,t.jsxs)(n.p,{children:["The frontend is your user-facing application, such as a web game or a dashboard.\nThe ",(0,t.jsx)(n.code,{children:"/templates/evm-midnight/"})," comes with a folder called ",(0,t.jsx)(n.code,{children:"/packages/frontend/"})," with an example Web App. It interacts with Paima Engine in two primary ways:"]}),"\n",(0,t.jsx)(n.h3,{id:"writes-sending-actions",children:"Writes (Sending Actions)"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Paima Engine web application, games or other frontend require to write to the Blockchain to interact with Paima Engine."}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Direct Contract Interaction"}),". E.g., Call ",(0,t.jsx)(n.code,{children:"transfer"})," on a ",(0,t.jsx)(n.code,{children:"ERC20"})," contract. Wallets can be integrated to make these calls."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Direct Paima L2 Contract Interaction"}),": ",(0,t.jsx)(n.code,{children:"Submit Input"})," method. This allows to pass a custom message to the engine. Wallets can be integrated to make these calls."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batcher Interaction"}),": Interact with your contracts, but through a HTTP calls. This custom built service can convert and validate the calls and writes to the Contract."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"reads",children:"Reads"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reads from Blockchain"})," Some blockchains expose APIs you can read to get the state or other information. We do not recommend doing this unless strictly necessary."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reads from Paima Engine API"})," Paima Engine Provides son Endpoints you can consume."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reads from Custom API"})," You can create your own custom endpoints."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["More in the ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/frontend",children:"Frontend"}),"\nMore in the ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/api",children:"API"})]}),"\n",(0,t.jsx)(n.h2,{id:"chain-config--sync-service",children:"Chain Config & Sync Service"}),"\n",(0,t.jsxs)(n.p,{children:["The Sync Service is the bridge between the blockchain world and your application's logic. You configure this service using the ",(0,t.jsx)(n.code,{children:"ConfigBuilder"})," to define ",(0,t.jsx)(n.strong,{children:"Primitives"}),". A primitive is a specific listener for on-chain events, such as a token transfer or an interaction with your ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/paima-l2-contract",children:"Paima L2 contract"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When a primitive detects an event, it uses a ",(0,t.jsx)(n.code,{children:"scheduledPrefix"})," to trigger the corresponding State Transition Function (STF) in your ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/state-machine",children:"state machine"}),". This setup allows your application to react to events from multiple chains in a deterministic way."]}),"\n",(0,t.jsx)(n.p,{children:"A example minimal configuration looks like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'export const localhostConfig = new ConfigBuilder()\n  // Define which chains to connect to\n  .buildNetworks(builder =>\n    .addNetwork({\n          name: "ntp",\n          type: ConfigNetworkType.NTP\n          startTime: launchStartTime ?? new Date().getTime(),\n          blockTimeMS: 1000,\n    })\n    .addViemNetwork({ name: "evmchain", ...hardhat })\n    .addNetwork({\n        name: "midnight",\n        type: ConfigNetworkType.MIDNIGHT,\n        /* other fields */\n     })\n  // Define how to sync from those chains\n  .buildSyncProtocols(builder =>\n    builder.addMain(/*...main protocol config...*/)\n    builder.addParallel(/* evm */)\n    builder.addParallel(/* midnightr */)\n  )\n  // Define what specific events to listen for\n  .buildPrimitives(builder =>\n    builder.addPrimitive(\n        (syncProtocols) => syncProtocols.evmchain,\n        (network, deployments, syncProtocol) => ({\n          name: "Track-ERC721",\n          type: ConfigPrimitiveType.EvmRpcERC721,\n          contractAddress: "0x...",\n          abi: getEvmEvent(erc722.abi, "Transfer(...)"),\n          // This prefix triggers the \'transfer-assets\' STF\n          scheduledPrefix: "transfer-assets",\n        })\n    )\n  )\n  .build();\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This configuration tells the engine to watch an ERC721 contract for ",(0,t.jsx)(n.code,{children:"Transfer"})," events and trigger the ",(0,t.jsx)(n.code,{children:"transfer-assets"})," function in your state machine whenever one occurs."]}),"\n",(0,t.jsxs)(n.p,{children:["Learn more about the ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/sync-service",children:"Sync Service & Chain Config"}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"contracts--the-paimal2contract",children:["Contracts & The ",(0,t.jsx)(n.code,{children:"PaimaL2Contract"})]}),"\n",(0,t.jsxs)(n.p,{children:["Paima Engine can monitor any smart contract on a supported chain by listening to the ",(0,t.jsx)(n.strong,{children:"events"})," it emits. For example, you can deploy a standard ERC20 contract, and the engine can track its ",(0,t.jsx)(n.code,{children:"Transfer"})," events to update balances in your application's state."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:'// A standard ERC20 contract Paima can listen to\ncontract Erc20Dev is ERC20 {\n    constructor() ERC20("Mock ERC20", "MERC") {}\n    function mint(address _to, uint256 _amount) external {\n        _mint(_to, _amount); // This emits the Transfer event\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["While any contract works, Paima provides the specialized ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"PaimaL2Contract"})}),', which acts as a highly efficient "mailbox" for your game. Instead of deploying complex on-chain logic, you send simple, formatted strings (e.g., ',(0,t.jsx)(n.code,{children:'["attack","p1", "m7"]'}),") to its ",(0,t.jsx)(n.code,{children:"submitInput"})," function. This saves gas, increases flexibility, and enables the ",(0,t.jsx)(n.strong,{children:"Batcher"})," for a cross-chain, gasless user experience."]}),"\n",(0,t.jsxs)(n.p,{children:["You connect a contract event to your State Machine by defining a ",(0,t.jsx)(n.strong,{children:"Primitive"})," in your chain configuration, which links the event to a ",(0,t.jsx)(n.code,{children:"scheduledPrefix"})," that triggers your game logic."]}),"\n",(0,t.jsxs)(n.p,{children:["Learn more about ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/contracts",children:"Contracts"}),"\nMore about ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/paima-l2-contract",children:"Paima L2"})]}),"\n",(0,t.jsx)(n.h2,{id:"process-orchestrator",children:"Process Orchestrator"}),"\n",(0,t.jsxs)(n.p,{children:["Developing a multi-chain dApp requires running many services at once. The ",(0,t.jsx)(n.strong,{children:"Process Orchestrator"})," is a powerful tool that automates your entire local development setup."]}),"\n",(0,t.jsxs)(n.p,{children:["When you run ",(0,t.jsx)(n.code,{children:"deno task dev"}),", the orchestrator defined in the ",(0,t.jsx)(n.code,{children:"start.ts"})," file at the ",(0,t.jsx)(n.code,{children:"/template/evm-midnight/"})," example, and launches your complete environment in the correct order."]}),"\n",(0,t.jsx)(n.p,{children:"This includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Starting local blockchains (EVM, Midnight, etc.)."}),"\n",(0,t.jsx)(n.li,{children:"Deploying your smart contracts."}),"\n",(0,t.jsx)(n.li,{children:"Running essential services like a development database and the Paima Batcher."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["By handling all this infrastructure automatically, the orchestrator makes local development a simple, one-command process. Once the environment is ready, it starts the main ",(0,t.jsx)(n.strong,{children:"Paima Sync Service"}),", which begins syncing data and running your state machine."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const config = Value.Parse(OrchestratorConfig, {\n    processes: {\n        // Launch Dev DB & Collector\n        [ComponentNames.PAIMA_PGLITE]: true,\n        [ComponentNames.COLLECTOR]: true,\n    },\n\n    processesToLaunch: [\n        startEvm,\n        startMidnight,\n    ],\n});\nawait start(config);\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["More About ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/processes",children:"Processes and Startup"})]}),"\n",(0,t.jsx)(n.h2,{id:"grammar",children:"Grammar"}),"\n",(0,t.jsxs)(n.p,{children:["The Grammar is the language of your dApp, connecting on-chain inputs to your State Machine. Paima v2 uses a structured ",(0,t.jsx)(n.strong,{children:"JSON array format"})," for all inputs, like ",(0,t.jsx)(n.code,{children:'["attack", 1, 42]'}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The first element (",(0,t.jsx)(n.code,{children:'"attack"'}),") is the ",(0,t.jsx)(n.strong,{children:"prefix"}),". It acts as a command that the engine uses to route the input to the correct State Transition Function (STF). You define these rules in a ",(0,t.jsx)(n.code,{children:"grammar.ts"})," file, specifying the name and data type for each argument. This provides automatic validation and type-safety for all user actions."]}),"\n",(0,t.jsx)(n.p,{children:"Example grammar definition:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'export const grammar = {\n  attack: [\n    ["playerId", Type.Integer()],\n    ["moveId", Type.Integer()],\n  ],\n  \n  // Auto-generate other primitives\n  ...Object.fromEntries(\n    Object.entries(mapPrimitivesToGrammar(localhostConfig.primitives))\n  ),\n} as const satisfies GrammarDefinition;\n'})}),"\n",(0,t.jsxs)(n.p,{children:["More About ",(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/grammar",children:"Grammar"})]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps-dive-deeper-into-paima-engine",children:"Next Steps: Dive Deeper into Paima Engine"}),"\n",(0,t.jsxs)(n.p,{children:["Congratulations! You've successfully set up a Paima Engine project and have a foundational understanding of its core components. You've seen how the ",(0,t.jsx)(n.strong,{children:"Orchestrator"})," sets up your environment, how the ",(0,t.jsx)(n.strong,{children:"Sync Service"})," and ",(0,t.jsx)(n.strong,{children:"Grammar"})," process on-chain data, and how the ",(0,t.jsx)(n.strong,{children:"State Machine"})," executes your application's logic."]}),"\n",(0,t.jsx)(n.p,{children:"Now you're ready to explore the full power and flexibility of the engine. Use the following sections as a guide to dive deeper into the topics that interest you most."}),"\n",(0,t.jsx)(n.h3,{id:"core-components-deep-dive",children:"Core Components Deep Dive"}),"\n",(0,t.jsx)(n.p,{children:"You've touched on the basics, now master the details of the components you've already used:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/state-machine",children:"State Machine"}),": Learn advanced techniques for managing your dApp's logic."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/sync-service",children:"Sync Service & Chain Config"}),": Uncover the full potential of multi-chain data aggregation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/contracts",children:"Contracts & The Paima L2 Contract"}),": Explore the specifics of the ",(0,t.jsx)(n.code,{children:"PaimaL2Contract"})," and other provided contracts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/grammar",children:"Grammar"}),": Master the language of your dApp for complex interactions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/frontend",children:"Frontend (dApp)"}),": Discover best practices for building user interfaces."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"advanced-features--services",children:"Advanced Features & Services"}),"\n",(0,t.jsx)(n.p,{children:"Level up your application with Paima's powerful, built-in services:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/batcher",children:(0,t.jsx)(n.strong,{children:"Batcher"})}),": Offer a gasless, cross-chain experience to your users."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/accounts",children:(0,t.jsx)(n.strong,{children:"Accounts"})}),": Implement a flexible L2 account system that goes beyond simple wallets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/randomness",children:(0,t.jsx)(n.strong,{children:"Randomness"})}),": Learn how to use Paima's deterministic randomness for fair and replayable game mechanics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/database",children:(0,t.jsx)(n.strong,{children:"Database"})}),": Take full control of your application's data with custom tables and queries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/components/achievements",children:(0,t.jsx)(n.strong,{children:"Achievements"})}),": Integrate a standardized achievement system into your dApp."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"multi-chain-development",children:"Multi-Chain Development"}),"\n",(0,t.jsx)(n.p,{children:"Paima is a multi-chain engine at its core. Learn how to connect to and leverage the unique capabilities of different blockchains:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/chains/evm",children:"EVM Chains (Ethereum, Arbitrum, etc.)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/chains/midnight",children:"Midnight (Zero-Knowledge)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/chains/cardano",children:"Cardano"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/chains/avail",children:"Avail (Data Availability)"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"deployment-and-lifecycle",children:"Deployment and Lifecycle"}),"\n",(0,t.jsx)(n.p,{children:"Ready to go live? These guides cover the final steps in your development journey:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/deployment/deploy-game",children:"Deploying Your Game to Production"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/deployment/versioning",children:"Versioning and Upgrading Your dApp"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"standards-and-interoperability-prcs",children:"Standards and Interoperability (PRCs)"}),"\n",(0,t.jsx)(n.p,{children:"Paima Request for Comments (PRCs) are open standards that enable interoperability between dApps in the Paima ecosystem. Implementing these standards can enhance composability and user engagement."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PRC-1"}),": A standard for in-game achievements."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PRC-2"}),': The "Hololocker" for projecting L1 NFTs into your dApp without bridging.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PRC-3 & PRC-5"}),': "Inverse Projection" standards for representing in-game assets as tradable NFTs and tokens on major L1s.']}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"see-it-all-in-action-the-tarochi-example",children:"See it all in Action: The Tarochi Example"}),"\n",(0,t.jsx)(n.p,{children:"To see how all these components come together to build a complete, complex, and successful on-chain game, dive into our comprehensive tutorial based on a real-world example."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/example-tarochi/",children:(0,t.jsx)(n.strong,{children:"Building Tarochi with Paima Engine"})})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"contributing-to-paima-engine",children:"Contributing to Paima Engine"}),"\n",(0,t.jsx)(n.p,{children:"For advanced developers interested in the engine's internals or looking to contribute:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/paima-engine/",children:"Paima Engine Packages (NPM & JSR)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/paima-v-next-docs/ja/home/paima-engine/contributions",children:"How to Contribute"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},6404:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var a=i(9593);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);
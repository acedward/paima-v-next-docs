"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9936],{2894:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"home/paima-engine/database","title":"Database","description":"At the heart of every Paima Engine node is a powerful PostgreSQL database. This database is the single source of truth for your application\'s state, storing everything from raw on-chain inputs to the processed, real-time state of your game world.","source":"@site/docs/home/1000-paima-engine/1002-database.md","sourceDirName":"home/1000-paima-engine","slug":"/home/paima-engine/database","permalink":"/paima-v-next-docs/ja/home/paima-engine/database","draft":false,"unlisted":false,"editUrl":"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/1000-paima-engine/1002-database.md","tags":[],"version":"current","sidebarPosition":1002,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/paima-v-next-docs/ja/home/paima-engine/"},"next":{"title":"Contributing to Paima Engine","permalink":"/paima-v-next-docs/ja/home/paima-engine/contributions"}}');var s=i(3261),a=i(6404);const r={},o="Database",l={},d=[{value:"Database Schema",id:"database-schema",level:3},{value:"Defining Custom Tables &amp; Migrations",id:"defining-custom-tables--migrations",level:3},{value:"Creating Migration Files",id:"creating-migration-files",level:3},{value:"Type-Safe Queries with <code>pgtyped</code>",id:"type-safe-queries-with-pgtyped",level:3},{value:"Writing Named Queries",id:"writing-named-queries",level:3},{value:"Generating TypeScript Functions",id:"generating-typescript-functions",level:3},{value:"System Tables Overview",id:"system-tables-overview",level:3}];function c(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"database",children:"Database"})}),"\n",(0,s.jsx)(t.p,{children:"At the heart of every Paima Engine node is a powerful PostgreSQL database. This database is the single source of truth for your application's state, storing everything from raw on-chain inputs to the processed, real-time state of your game world."}),"\n",(0,s.jsx)(t.p,{children:"Paima Engine provides a sophisticated and developer-friendly toolkit for defining your database schema, managing its evolution over time, and interacting with it in a type-safe manner."}),"\n",(0,s.jsx)(t.h3,{id:"database-schema",children:"Database Schema"}),"\n",(0,s.jsx)(t.p,{children:"Your dApp's database is organized into three main schemas:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"paima"})}),": This schema is reserved for Paima Engine's internal system tables. These tables manage the core operations of the node, such as block processing, input queuing, account management, and achievement tracking. You should generally not modify these tables directly."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"primitives"})}),": This schema holds the ",(0,s.jsx)(t.strong,{children:"Dynamic Tables"})," that are automatically created and managed by the Paima Engine to represent the state of your configured Primitives. For example, an ",(0,s.jsx)(t.code,{children:"ERC20"})," primitive will create a table in this schema to track token balances."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"public"})}),": This is ",(0,s.jsx)(t.strong,{children:"your schema"}),". All of your dApp's custom tables, such as ",(0,s.jsx)(t.code,{children:"players"}),", ",(0,s.jsx)(t.code,{children:"games"}),", or ",(0,s.jsx)(t.code,{children:"inventories"}),", should be created here."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"defining-custom-tables--migrations",children:"Defining Custom Tables & Migrations"}),"\n",(0,s.jsxs)(t.p,{children:["The process of defining and evolving your database schema is managed through a robust ",(0,s.jsx)(t.strong,{children:"migration system"}),". A migration is simply a SQL file containing ",(0,s.jsx)(t.code,{children:"CREATE TABLE"}),", ",(0,s.jsx)(t.code,{children:"ALTER TABLE"}),", or other DDL statements."]}),"\n",(0,s.jsx)(t.h3,{id:"creating-migration-files",children:"Creating Migration Files"}),"\n",(0,s.jsxs)(t.p,{children:["All your SQL migration files should be placed in the ",(0,s.jsx)(t.code,{children:"/packages/node-sdk/db/migrations/system-down-v-x.x.x.sql"})," directory."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Example (",(0,s.jsx)(t.code,{children:"system-down-v-x.x.x.sql"}),"):"]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE paima.system_table (\n  id SERIAL PRIMARY KEY,\n  block_height INTEGER NOT NULL,\n  ...other fields...\n);\n"})}),"\n",(0,s.jsxs)(t.h3,{id:"type-safe-queries-with-pgtyped",children:["Type-Safe Queries with ",(0,s.jsx)(t.code,{children:"pgtyped"})]}),"\n",(0,s.jsxs)(t.p,{children:["Paima Engine uses ",(0,s.jsx)(t.code,{children:"pgtyped"})," to bridge the gap between your SQL database and your TypeScript code. It automatically generates fully type-safe TypeScript functions directly from your raw SQL queries, eliminating an entire class of bugs and providing excellent editor autocompletion."]}),"\n",(0,s.jsx)(t.h3,{id:"writing-named-queries",children:"Writing Named Queries"}),"\n",(0,s.jsxs)(t.p,{children:["You write your SQL queries in files within the ",(0,s.jsx)(t.code,{children:"/TODO"})," directory. To make a query available to ",(0,s.jsx)(t.code,{children:"pgtyped"}),", you must give it a special named comment."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Example (",(0,s.jsx)(t.code,{children:"TODO.sql"}),"):"]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"-- TODO\n"})}),"\n",(0,s.jsx)(t.h3,{id:"generating-typescript-functions",children:"Generating TypeScript Functions"}),"\n",(0,s.jsx)(t.p,{children:"After writing your queries, you run a simple command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"deno task -f @paima/db pgtyped:update\n"})}),"\n",(0,s.jsx)(t.p,{children:"This command introspects your SQL files and your database schema, then generates corresponding TypeScript functions."}),"\n",(0,s.jsx)(t.h3,{id:"system-tables-overview",children:"System Tables Overview"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"paima"})," schema contains a number of tables essential for the engine's operation. Here are a few of the most important ones:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Table"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"paima.paima_blocks"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Records every L2 block processed by the engine, including its seed for randomness."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"paima.rollup_inputs"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A queue for all incoming inputs from on-chain events."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"paima.rollup_input_future_block"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Stores scheduled inputs that are set to execute at a future block height (for timers/ticks)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsxs)(t.strong,{children:[(0,s.jsx)(t.code,{children:"paima.accounts"})," & ",(0,s.jsx)(t.code,{children:"paima.addresses"})]})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Manages the L2 Account System, linking wallets to persistent accounts."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"paima.achievement_progress"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Stores the dynamic per-player progress for the PRC-1 Achievement system."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"paima.primitive_config"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Stores the configuration of all your defined Primitives."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},6404:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(9593);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);